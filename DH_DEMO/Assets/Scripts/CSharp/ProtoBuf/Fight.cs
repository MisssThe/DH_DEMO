// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Fight.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Network {

  /// <summary>Holder for reflection information generated from Fight.proto</summary>
  public static partial class FightReflection {

    #region Descriptor
    /// <summary>File descriptor for Fight.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FightReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtGaWdodC5wcm90bxIHbmV0d29yayI6CgVGaWdodBIOCgZteU5hbWUYASAB",
            "KAkSDwoHaGlzTmFtZRgCIAEoCRIQCghjYXJJbmRleBgDIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Network.Fight), global::Network.Fight.Parser, new[]{ "MyName", "HisName", "CarIndex" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Fight : pb::IMessage<Fight> {
    private static readonly pb::MessageParser<Fight> _parser = new pb::MessageParser<Fight>(() => new Fight());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Network.FightReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fight(Fight other) : this() {
      myName_ = other.myName_;
      hisName_ = other.hisName_;
      carIndex_ = other.carIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fight Clone() {
      return new Fight(this);
    }

    /// <summary>Field number for the "myName" field.</summary>
    public const int MyNameFieldNumber = 1;
    private string myName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MyName {
      get { return myName_; }
      set {
        myName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hisName" field.</summary>
    public const int HisNameFieldNumber = 2;
    private string hisName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HisName {
      get { return hisName_; }
      set {
        hisName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carIndex" field.</summary>
    public const int CarIndexFieldNumber = 3;
    private int carIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CarIndex {
      get { return carIndex_; }
      set {
        carIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyName != other.MyName) return false;
      if (HisName != other.HisName) return false;
      if (CarIndex != other.CarIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyName.Length != 0) hash ^= MyName.GetHashCode();
      if (HisName.Length != 0) hash ^= HisName.GetHashCode();
      if (CarIndex != 0) hash ^= CarIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MyName);
      }
      if (HisName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HisName);
      }
      if (CarIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CarIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MyName);
      }
      if (HisName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HisName);
      }
      if (CarIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CarIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fight other) {
      if (other == null) {
        return;
      }
      if (other.MyName.Length != 0) {
        MyName = other.MyName;
      }
      if (other.HisName.Length != 0) {
        HisName = other.HisName;
      }
      if (other.CarIndex != 0) {
        CarIndex = other.CarIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MyName = input.ReadString();
            break;
          }
          case 18: {
            HisName = input.ReadString();
            break;
          }
          case 24: {
            CarIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
